{"ast":null,"code":"var _jsxFileName = \"/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    // const peopleArray = people.results;\n    console.log(Array.isArray(items.results), items.results);\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"birthdays today\"), items.results.map(person => {\n      const {\n        id,\n        name,\n        dob,\n        picture\n      } = person;\n      return /*#__PURE__*/React.createElement(\"article\", {\n        key: id.value,\n        className: \"person\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: picture.medium,\n        alt: name.first,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, name.first, \" \", name.last), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, dob.age, \" years\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"X\")));\n    }))) //   {/* <ul>\n    //     {items.map(item => (\n    //       <li key={item.id}>\n    //         {item.name} {item.price}\n    //       </li>\n    //     ))}\n    //   </ul> */}\n    ;\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js"],"names":["React","useState","useEffect","List","App","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","console","log","Array","isArray","results","map","person","id","name","dob","picture","value","medium","first","last","age"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAHa,CAKb;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,8DAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACD,KANL,EAOI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACW,OAAnB,CAAP;AACD,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFM,MAEA;AACL;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAN,CAAcX,KAAK,CAACY,OAApB,CAAZ,EAA0CZ,KAAK,CAACY,OAAhD;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGGZ,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC7B,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,GAAZ;AAAiBC,QAAAA;AAAjB,UAA6BJ,MAAnC;AACA,0BACE;AAAS,QAAA,GAAG,EAAEC,EAAE,CAACI,KAAjB;AAAwB,QAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,MAAlB;AAA0B,QAAA,GAAG,EAAEJ,IAAI,CAACK,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,IAAI,CAACK,KADR,OACgBL,IAAI,CAACM,IADrB,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,GAAG,CAACM,GAAR,WAJF,CAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CARF,CADF;AAcD,KAhBA,CAHH,CADF,CADF,CAyBE;AACA;AACA;AACA;AACA;AACA;AACA;AA/BF;AAiCD;AACF;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    // const peopleArray = people.results;\n    console.log(Array.isArray(items.results), items.results);\n\n    return (\n      <main>\n        <section className=\"container\">\n          <h3>birthdays today</h3>\n          {/* <List people={items.results} /> */}\n          {items.results.map((person) => {\n            const { id, name, dob, picture } = person;\n            return (\n              <article key={id.value} className=\"person\">\n                <img src={picture.medium} alt={name.first} />\n                <div>\n                  <h4>\n                    {name.first} {name.last}\n                  </h4>\n                  <p>{dob.age} years</p>\n                </div>\n                <div>\n                  <button id=\"delete\">X</button>\n                </div>\n              </article>\n            );\n          })}\n          {/* <button onClick={() => setPeople([])}>Clear All</button> */}\n        </section>\n      </main>\n      //   {/* <ul>\n      //     {items.map(item => (\n      //       <li key={item.id}>\n      //         {item.name} {item.price}\n      //       </li>\n      //     ))}\n      //   </ul> */}\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}