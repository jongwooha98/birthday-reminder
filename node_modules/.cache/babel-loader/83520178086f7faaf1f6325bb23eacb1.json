{"ast":null,"code":"var _jsxFileName = \"/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [items]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    {\n      isLoaded && // const peopleArray = people.results;\n      console.log(Array.isArray(items.results), items.results);\n      const people = items.results;\n      return /*#__PURE__*/React.createElement(\"main\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"birthdays today\"), people.results.map(person => {\n        const {\n          id,\n          name,\n          dob,\n          picture\n        } = person;\n        return /*#__PURE__*/React.createElement(\"article\", {\n          key: id.value,\n          className: \"person\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: picture.medium,\n          alt: name.first,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, name.first, \" \", name.last), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }, dob.age, \" years\")), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          id: \"delete\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, \"X\")));\n      }))) //   {/* <ul>\n      //     {items.map(item => (\n      //       <li key={item.id}>\n      //         {item.name} {item.price}\n      //       </li>\n      //     ))}\n      //   </ul> */}\n      ;\n    }\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js"],"names":["React","useState","useEffect","List","App","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","console","log","Array","isArray","results","people","map","person","id","name","dob","picture","value","medium","first","last","age"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [items]);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    {\n      isLoaded &&\n        // const peopleArray = people.results;\n        console.log(Array.isArray(items.results), items.results);\n      const people = items.results;\n      return (\n        <main>\n          <section className=\"container\">\n            <h3>birthdays today</h3>\n            {/* <List people={items.results} /> */}\n            {people.results.map((person) => {\n              const { id, name, dob, picture } = person;\n              return (\n                <article key={id.value} className=\"person\">\n                  <img src={picture.medium} alt={name.first} />\n                  <div>\n                    <h4>\n                      {name.first} {name.last}\n                    </h4>\n                    <p>{dob.age} years</p>\n                  </div>\n                  <div>\n                    <button id=\"delete\">X</button>\n                  </div>\n                </article>\n              );\n            })}\n            {/* <button onClick={() => setPeople([])}>Clear All</button> */}\n          </section>\n        </main>\n        //   {/* <ul>\n        //     {items.map(item => (\n        //       <li key={item.id}>\n        //         {item.name} {item.price}\n        //       </li>\n        //     ))}\n        //   </ul> */}\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}