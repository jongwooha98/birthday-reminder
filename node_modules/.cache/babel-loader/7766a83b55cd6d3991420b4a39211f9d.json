{"ast":null,"code":"var _jsxFileName = \"/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js\";\nimport React, { useState, useEffect } from 'react'; // import data from './data';\n\nimport List from './List'; // function App() {\n//   const [people, setPeople] = useState(data);\n//   return (\n//     <main>\n//       <section className=\"container\">\n//         <h3>{people.length} birthdays today</h3>\n//         <List people={people} />\n//         <button onClick={() => setPeople([])}>Clear All</button>\n//       </section>\n//     </main>\n//   );\n// }\n\nexport default App;\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [people, setPeople] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setPeople(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, people.length, \" birthdays today\"), /*#__PURE__*/React.createElement(List, {\n      people: people,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }))) //   {/* <ul>\n    //     {items.map(item => (\n    //       <li key={item.id}>\n    //         {item.name} {item.price}\n    //       </li>\n    //     ))}\n    //   </ul> */}\n    ;\n  }\n}","map":{"version":3,"sources":["/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js"],"names":["React","useState","useEffect","List","App","error","setError","isLoaded","setIsLoaded","people","setPeople","fetch","then","res","json","result","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,GAAf;;AAEA,SAASA,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAHa,CAKb;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACK,MAAD,CAAT;AACD,KANL,EAOI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACW,OAAnB,CAAP;AACD,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKE,MAAM,CAACQ,MAAZ,qBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAER,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AAdF;AAgBD;AACF","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import data from './data';\nimport List from './List';\n// function App() {\n//   const [people, setPeople] = useState(data);\n\n//   return (\n//     <main>\n//       <section className=\"container\">\n//         <h3>{people.length} birthdays today</h3>\n//         <List people={people} />\n//         <button onClick={() => setPeople([])}>Clear All</button>\n//       </section>\n//     </main>\n//   );\n// }\n\nexport default App;\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [people, setPeople] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch('https://randomuser.me/api/')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setPeople(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <main>\n        <section className=\"container\">\n          <h3>{people.length} birthdays today</h3>\n          <List people={people} />\n          {/* <button onClick={() => setPeople([])}>Clear All</button> */}\n        </section>\n      </main>\n      //   {/* <ul>\n      //     {items.map(item => (\n      //       <li key={item.id}>\n      //         {item.name} {item.price}\n      //       </li>\n      //     ))}\n      //   </ul> */}\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}