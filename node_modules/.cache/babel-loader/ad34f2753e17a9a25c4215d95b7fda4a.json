{"ast":null,"code":"var _jsxFileName = \"/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [people, setPeople] = useState([]);\n  const [birthdayToday, setBirthdayToday] = useState();\n  const [clickedBirthday, setClickedBirthday] = useState([]);\n  const [date, setDate] = useState({\n    today: '',\n    clickedDate: ''\n  }); // const today = new Date().toString().slice(4, 10);\n  // let clickedDate;\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture,login').then(res => res.json()).then(data => {\n      setIsLoaded(true);\n      setPeople(data.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  useEffect(() => {\n    setDate(prevState => ({ ...prevState,\n      today: new Date().toString().slice(4, 10)\n    }));\n    setBirthdayToday(people.filter(person => new Date(new Date(person.dob.date).getTime() + new Date(person.dob.date).getTimezoneOffset() * 60000).toString().slice(4, 10) === date.today));\n  }, [people, date.today]);\n\n  const handleClick = value => {\n    setDate({\n      clickedDate: value.toString().slice(4, 10)\n    });\n    let filteredBirthday = people.filter(person => new Date(new Date(person.dob.date).getTime() + new Date(person.dob.date).getTimezoneOffset() * 60000).toString().slice(4, 10) === date.clickedDate);\n    setClickedBirthday(filteredBirthday);\n    console.log(date.today, date.clickedDate);\n  };\n\n  console.log(date.today, date.clickedDate);\n\n  if (error || !Array.isArray(people)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errorScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loadingScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container today\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Birthday Reminder!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"It's \", date.today, \" today\"), /*#__PURE__*/React.createElement(List, {\n      people: birthdayToday,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Use calendar to check your friends' birthdays!\"), /*#__PURE__*/React.createElement(Calendar, {\n      className: \"c1\",\n      onChange: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container upcoming\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, date.clickedDate), /*#__PURE__*/React.createElement(List, {\n      people: clickedBirthday,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })))));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js"],"names":["React","useState","useEffect","Calendar","List","App","error","setError","isLoaded","setIsLoaded","people","setPeople","birthdayToday","setBirthdayToday","clickedBirthday","setClickedBirthday","date","setDate","today","clickedDate","fetch","then","res","json","data","results","prevState","Date","toString","slice","filter","person","dob","getTime","getTimezoneOffset","handleClick","value","filteredBirthday","console","log","Array","isArray","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [people, setPeople] = useState([]);\n  const [birthdayToday, setBirthdayToday] = useState();\n  const [clickedBirthday, setClickedBirthday] = useState([]);\n  const [date, setDate] = useState({\n    today: '',\n    clickedDate: '',\n  });\n\n  // const today = new Date().toString().slice(4, 10);\n  // let clickedDate;\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture,login')\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          setIsLoaded(true);\n          setPeople(data.results);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  useEffect(() => {\n    setDate((prevState) => ({\n      ...prevState,\n      today: new Date().toString().slice(4, 10),\n    }));\n    setBirthdayToday(\n      people.filter(\n        (person) =>\n          new Date(\n            new Date(person.dob.date).getTime() +\n              new Date(person.dob.date).getTimezoneOffset() * 60000\n          )\n            .toString()\n            .slice(4, 10) === date.today\n      )\n    );\n  }, [people, date.today]);\n\n  const handleClick = (value) => {\n    setDate({\n      clickedDate: value.toString().slice(4, 10),\n    });\n    let filteredBirthday = people.filter(\n      (person) =>\n        new Date(\n          new Date(person.dob.date).getTime() +\n            new Date(person.dob.date).getTimezoneOffset() * 60000\n        )\n          .toString()\n          .slice(4, 10) === date.clickedDate\n    );\n    setClickedBirthday(filteredBirthday);\n    console.log(date.today, date.clickedDate);\n  };\n  console.log(date.today, date.clickedDate);\n\n  if (error || !Array.isArray(people)) {\n    return <div className=\"errorScreen\">Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div className=\"loadingScreen\">Loading...</div>;\n  } else {\n    return (\n      <>\n        <main>\n          <div>\n            <section className=\"container today\">\n              <h1>Birthday Reminder!</h1>\n              <p>It's {date.today} today</p>\n              <List people={birthdayToday} />\n            </section>\n          </div>\n          <div>\n            <section className=\"container calendar\">\n              <h4>Use calendar to check your friends' birthdays!</h4>\n              <Calendar className=\"c1\" onChange={handleClick} />\n            </section>\n            <section className=\"container upcoming\">\n              <h3>{date.clickedDate}</h3>\n              <List people={clickedBirthday} />\n            </section>\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}