{"ast":null,"code":"var _jsxFileName = \"/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [people, setPeople] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture,login').then(res => res.json()).then(data => {\n      setIsLoaded(true);\n      setPeople(data.results);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error || !Array.isArray(people)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    console.log(people);\n    let today = new Date('1961-09-27T15:14:11.577Z').toJSON().slice(0, 10);\n    let filterdPeople = people.filter(person => person.dob.date.slice(0, 10) == today);\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"birthdays today\"), /*#__PURE__*/React.createElement(List, {\n      people: filterdPeople,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }))) //   {/* <ul>\n    //     {items.map(item => (\n    //       <li key={item.id}>\n    //         {item.name} {item.price}\n    //       </li>\n    //     ))}\n    //   </ul> */}\n    ;\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jongwooha98/Frontend/react-app/birthday-reminder/src/App.js"],"names":["React","useState","useEffect","List","App","error","setError","isLoaded","setIsLoaded","people","setPeople","fetch","then","res","json","data","results","Array","isArray","message","console","log","today","Date","toJSON","slice","filterdPeople","filter","person","dob","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAHa,CAKb;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,IAAD,IAAU;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACK,IAAI,CAACC,OAAN,CAAT;AACD,KANL,EAOI;AACA;AACA;AACCX,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAK,IAAI,CAACY,KAAK,CAACC,OAAN,CAAcT,MAAd,CAAd,EAAqC;AACnC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaJ,KAAK,CAACc,OAAnB,CAAP;AACD,GAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFM,MAEA;AACLa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACA,QAAIa,KAAK,GAAG,IAAIC,IAAJ,CAAS,0BAAT,EAAqCC,MAArC,GAA8CC,KAA9C,CAAoD,CAApD,EAAuD,EAAvD,CAAZ;AACA,QAAIC,aAAa,GAAGjB,MAAM,CAACkB,MAAP,CACjBC,MAAD,IAAYA,MAAM,CAACC,GAAP,CAAWC,IAAX,CAAgBL,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,KAAgCH,KAD1B,CAApB;AAGA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEI,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AAfF;AAiBD;AACF;;AAED,eAAetB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport List from './List';\n\nfunction App() {\n  const [error, setError] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [people, setPeople] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?results=1000&inc=name,dob,picture,login')\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          setIsLoaded(true);\n          setPeople(data.results);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error || !Array.isArray(people)) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    console.log(people);\n    let today = new Date('1961-09-27T15:14:11.577Z').toJSON().slice(0, 10);\n    let filterdPeople = people.filter(\n      (person) => person.dob.date.slice(0, 10) == today\n    );\n    return (\n      <main>\n        <section className=\"container\">\n          <h3>birthdays today</h3>\n          <List people={filterdPeople} />\n\n          {/* <button onClick={() => setPeople([])}>Clear All</button> */}\n        </section>\n      </main>\n      //   {/* <ul>\n      //     {items.map(item => (\n      //       <li key={item.id}>\n      //         {item.name} {item.price}\n      //       </li>\n      //     ))}\n      //   </ul> */}\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}